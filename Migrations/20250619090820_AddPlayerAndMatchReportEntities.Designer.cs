// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using WarApi.Models;

#nullable disable

namespace WarApi.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250619090820_AddPlayerAndMatchReportEntities")]
    partial class AddPlayerAndMatchReportEntities
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("MatchReportNamespace.MatchReport", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("Date")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Deployment")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("ExpectedA")
                        .HasColumnType("integer");

                    b.Property<int>("ExpectedB")
                        .HasColumnType("integer");

                    b.Property<int>("FinalScoreA")
                        .HasColumnType("integer");

                    b.Property<int>("FinalScoreB")
                        .HasColumnType("integer");

                    b.Property<int>("KillsA")
                        .HasColumnType("integer");

                    b.Property<int>("KillsB")
                        .HasColumnType("integer");

                    b.Property<string>("ListA")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ListB")
                        .IsRequired()
                        .HasColumnType("text");

                    b.PrimitiveCollection<int[]>("MagicA")
                        .IsRequired()
                        .HasColumnType("integer[]");

                    b.PrimitiveCollection<int[]>("MagicB")
                        .IsRequired()
                        .HasColumnType("integer[]");

                    b.Property<string>("Map")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("PlayerAId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("PlayerBId")
                        .HasColumnType("uuid");

                    b.Property<string>("PrimaryMission")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("PrimaryResult")
                        .HasColumnType("integer");

                    b.Property<string>("SecondaryA")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("SecondaryB")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("SecondaryWinA")
                        .HasColumnType("boolean");

                    b.Property<bool>("SecondaryWinB")
                        .HasColumnType("boolean");

                    b.HasKey("Id");

                    b.HasIndex("PlayerAId");

                    b.HasIndex("PlayerBId");

                    b.ToTable("MatchReports");
                });

            modelBuilder.Entity("WarApi.Models.Player", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Alias")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Apellidos")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Contraseña")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Equipo")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Foto")
                        .HasColumnType("text");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("ID");

                    b.ToTable("Players");
                });

            modelBuilder.Entity("MatchReportNamespace.MatchReport", b =>
                {
                    b.HasOne("WarApi.Models.Player", "PlayerA")
                        .WithMany()
                        .HasForeignKey("PlayerAId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("WarApi.Models.Player", "PlayerB")
                        .WithMany()
                        .HasForeignKey("PlayerBId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("PlayerA");

                    b.Navigation("PlayerB");
                });
#pragma warning restore 612, 618
        }
    }
}
